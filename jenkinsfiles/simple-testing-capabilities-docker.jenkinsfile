pipeline {
    agent { node 'aws-ec2-dev' }
    environment {
        registry_url = "803808824931.dkr.ecr.us-east-1.amazonaws.com"
        app = "simple-testing-capabilities:latest"
        app2 = "simple-testing-capabilities-spa:latest"
    }
    stages {
        stage ('[i] Clean WC') {
            steps {
                cleanWs()
            }
        }
        stage ('[i] GIT') {
            steps {
                dir ("ci-cd-app") {
                    git branch: 'master', credentialsId: 'github', url: 'https://github.com/publius-github/ci-cd-app.git'
                }
            }
        }
        stage('[i] Docker build [simple-testing-capabilities]') {
            steps {
                    sh '''
                    echo "=========================== Build docker $app image ==========================="
                    cd ${WORKSPACE}/ci-cd-app/
                    /usr/bin/docker build -f "simple-testing-capabilities.dockerfile" -t $registry_url/$app .
                    '''
                }
        }
        stage('[i] Docker push [simple-testing-capabilities]') {
            steps {
                script {
                    docker.withRegistry("https://$registry_url", "ecr:us-east-1:aws") {
                    docker.image("$registry_url/$app").push()
                    }
                } 
            }   
        }
        stage('[i] Docker build [simple-testing-capabilities-spa]') {
            steps {
                    sh '''
                    echo "=========================== Build docker $app2 image ==========================="
                    cd ${WORKSPACE}/ci-cd-app/
                    ip_address=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
                    sed -i -e "s/localhost/$ip_address/g" simple-testing-capabilities-spa/src/ProjectSettings.json
                    /usr/bin/docker build -f "simple-testing-capabilities-spa.dockerfile" -t $registry_url/$app2 .
                    '''
                }
        }
        stage('[i] Docker push [simple-testing-capabilities-spa]') {
            steps {
                script {
                    docker.withRegistry("https://$registry_url", "ecr:us-east-1:aws") {
                    docker.image("$registry_url/$app2").push()
                    }
                } 
            }   
        }
        stage('[i] Docker-compose up]') {
            steps {
                    sh '''
                    echo "====================== Docker-compose up ======================"
                    $(aws ecr get-login --no-include-email --region us-east-1)
                    cd ${WORKSPACE}/ci-cd-app/
                    /usr/local/bin/docker-compose up -d
                    '''
            }
        }
	    stage('[i] Sonarqube: simple-testing-capabilities (Backend)') {
		    steps {
			        sh '''
                    echo "====================== Sonarqube: simple-testing-capabilities (Backend) ======================"
                    cd ${WORKSPACE}/ci-cd-app/simple-testing-capabilities/MainProject
                    dotnet publish --output publish
                    $(aws ecr get-login --no-include-email --region us-east-1)
                    docker run -dit --rm -v ${WORKSPACE}/ci-cd-app/simple-testing-capabilities/MainProject:/usr/src 803808824931.dkr.ecr.us-east-1.amazonaws.com/cicd-sonar-runner:latest sonar-scanner   \
                    -Dsonar.host.url=http://10.0.1.100:9000 \
                    -Dsonar.jdbc.url=jdbc:postgresql://10.0.1.100:5432/sonar \
                    -Dsonar.jdbc.username=sonar \
                    -Dsonar.jdbc.password=sonar \
                    -Dsonar.projectBaseDir=/usr/src \
                    -Dsonar.sources=. \
                    -Dsonar.projectKey=simple-testing-capabilities \
                    -Dsonar.projectName=simple-testing-capabilities \
                    -Dsonar.projectVersion=${BUILD_NUMBER} \
                    -Dsonar.projectBaseDir=/usr/src \
                    -Dsonar.sources=.
                    '''
		    }
	    }
        stage('[i] Sonarqube: simple-testing-capabilities-spa (Frontend)') {
            steps {
                    sh '''
                    echo "====================== Sonarqube: simple-testing-capabilities-spa (Frontend) ======================"
                    $(aws ecr get-login --no-include-email --region us-east-1)
                    docker run -dit --rm -v ${WORKSPACE}/ci-cd-app/simple-testing-capabilities-spa:/usr/src 803808824931.dkr.ecr.us-east-1.amazonaws.com/cicd-sonar-runner:latest sonar-scanner   \
                    -Dsonar.host.url=http://10.0.1.100:9000 \
                    -Dsonar.jdbc.url=jdbc:postgresql://10.0.1.100:5432/sonar \
                    -Dsonar.jdbc.username=sonar \
                    -Dsonar.jdbc.password=sonar \
                    -Dsonar.projectBaseDir=/usr/src \
                    -Dsonar.sources=. \
                    -Dsonar.projectKey=simple-testing-capabilities-spa \
                    -Dsonar.projectName=simple-testing-capabilities-spa \
                    -Dsonar.projectVersion=${BUILD_NUMBER}
                    '''
            }       
		}
        stage('[i] API integration tests') {
            steps {
                    sh '''
                    echo "====================== API integration test ======================"
                    cd ${WORKSPACE}/ci-cd-app/simple-testing-capabilities-ui-tests/APITests
                    dotnet publish --output api-tests
                    dotnet vstest api-tests/APITests.dll /logger:trx
                    aws s3 mv TestResults/*.trx s3://simple-testing-capabilities-tests/api-tests/${JOB_NAME}-${BUILD_NUMBER}.trx
                    '''
            } 
        }
        stage('[i] UI integration tests') {
            steps {
                    sh '''
                    echo "====================== UI test ======================"
                    cd ${WORKSPACE}/ci-cd-app/simple-testing-capabilities-ui-tests/UITests
                    ip_address=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
                    sed -i -e "s/localhost/$ip_address/g" ${WORKSPACE}/ci-cd-app/simple-testing-capabilities-ui-tests/UITests/appsettings.json
                    dotnet publish --output ui-tests
                    dotnet vstest ui-tests/UITests.dll /logger:trx
                    aws s3 mv TestResults/*.trx s3://simple-testing-capabilities-tests/ui-tests/${JOB_NAME}-${BUILD_NUMBER}.trx
                    '''
            } 
        }
        stage('[i] Docker-compose down]') {
            steps {
                    sh '''
                    echo "====================== Docker-compose down ======================"
                    cd ${WORKSPACE}/ci-cd-app/
                    /usr/local/bin/docker-compose down
                    '''
            }
        }
    }   
}
