pipeline {
    agent { node 'aws-ec2-dev' }
    environment {
        access_key = credentials('env-aws-access-key')
        secret_key = credentials('env-aws-secret-key')
    }
    stages {
        stage ('[i] Clean WC') {
            steps {
                cleanWs()
            }
        }
        stage ('[i] GIT') {
            steps {
                dir ("ci-cd-app") {
                    git branch: 'master', credentialsId: 'github', url: 'https://github.com/publius-github/ci-cd-app.git'
                }
                dir ("ci-cd-infra") {
                    git branch: 'feature/container', credentialsId: 'github', url: 'https://github.com/publius-github/ci-cd.git'
                }
            }
        }
	    stage('[i] Sonarqube: simple-testing-capabilities') {
		    steps {
			        sh '''
                    echo "====================== Sonarqube: simple-testing-capabilities ======================"
                    cd ${WORKSPACE}/ci-cd-app/simple-testing-capabilities/MainProject
                    dotnet publish --output publish
                    $(aws ecr get-login --no-include-email --region us-east-1)
                    docker run -dit --rm -v ${WORKSPACE}/ci-cd-app/simple-testing-capabilities/MainProject:/usr/src 803808824931.dkr.ecr.us-east-1.amazonaws.com/cicd-sonar:latest sonar-scanner   \
                    -Dsonar.host.url=http://10.0.1.100:9000 \
                    -Dsonar.jdbc.url=jdbc:postgresql://10.0.1.100:5432/sonar \
                    -Dsonar.jdbc.username=sonar \
                    -Dsonar.jdbc.password=sonar \
                    -Dsonar.projectBaseDir=/usr/src \
                    -Dsonar.sources=. \
                    -Dsonar.projectKey=simple-testing-capabilities \
                    -Dsonar.projectName=simple-testing-capabilities \
                    -Dsonar.projectVersion=${BUILD_NUMBER} \
                    -Dsonar.projectBaseDir=/usr/src \
                    -Dsonar.sources=.
                    '''
		    }
	    }
        stage('[i] Sonarqube: simple-testing-capabilities-spa') {
            steps {
                    sh '''
                    echo "====================== Sonarqube: simple-testing-capabilities-spa ======================"
                    $(aws ecr get-login --no-include-email --region us-east-1)
                    docker run -dit --rm -v ${WORKSPACE}/ci-cd-app/simple-testing-capabilities-spa:/usr/src 803808824931.dkr.ecr.us-east-1.amazonaws.com/cicd-sonar:latest sonar-scanner   \
                    -Dsonar.host.url=http://10.0.1.100:9000 \
                    -Dsonar.jdbc.url=jdbc:postgresql://10.0.1.100:5432/sonar \
                    -Dsonar.jdbc.username=sonar \
                    -Dsonar.jdbc.password=sonar \
                    -Dsonar.projectBaseDir=/usr/src \
                    -Dsonar.sources=. \
                    -Dsonar.projectKey=simple-testing-capabilities-spa \
                    -Dsonar.projectName=simple-testing-capabilities-spa \
                    -Dsonar.projectVersion=${BUILD_NUMBER}
                    '''
            }       
		}
        stage('[i] API integration tests') {
            steps {
                    sh '''
                    echo "====================== API integration test ======================"
                    cd ${WORKSPACE}/ci-cd-app/simple-testing-capabilities-ui-tests/APITests
                    dotnet publish --output api-tests
                    dotnet vstest api-tests/APITests.dll /logger:trx
                    '''
            } 
        }
        stage('[i] UI integration tests') {
            steps {
                    sh '''
                    echo "====================== UI test ======================"
                    cd ${WORKSPACE}/ci-cd-app/simple-testing-capabilities-ui-tests/UITests
                    ip_address=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
                    sed -i -e "s/localhost/$ip_address/g" ${WORKSPACE}/ci-cd-app/simple-testing-capabilities-ui-tests/UITests/appsettings.json
                    dotnet publish --output ui-tests
                    dotnet vstest ui-tests/UITests.dll /logger:trx  
                    '''
            } 
        }
    }   
}