pipeline {
    agent { node 'aws-ec2-dev' }
    environment {
        registry_url = "803808824931.dkr.ecr.us-east-1.amazonaws.com"
        app_backend = "simple-testing-capabilities:latest"
        app_port_backend = "50504"
        app_frontend = "simple-testing-capabilities-spa:latest"
        app_port_frontend = "3000"
        app_db = "redis:latest"
        app_port_db = "6379"
    }
    stages {
        stage ('[i] Clean WC') {
            steps {
                cleanWs()
            }
        }
        stage ('[i] GIT') {
            steps {
                dir ("ci-cd-infra") {
                    git branch: 'feature/container', credentialsId: 'github', url: 'https://github.com/publius-github/ci-cd.git'
                }
            }
        }
        stage('[i] AWS Deployment') {
            steps {
                sh '''
                cd ${WORKSPACE}/ci-cd-infra/terraform/01-cicd-ecs/
                /usr/local/bin/terraform init
                /usr/local/bin/terraform plan --var-file=vars/nonprod.tfvars --var "app_image_backend=$registry_url/$app_backend" --var "app_port_backend=$app_port_backend" --var "app_image_frontend=$registry_url/$app_frontend" --var "app_port_frontend=$app_port_frontend" --var "app_image_db=$registry_url/$app_db" --var "app_port_db=$app_port_db"
                /usr/local/bin/terraform destroy --var-file=vars/nonprod.tfvars --var "app_image_backend=$registry_url/$app_backend" --var "app_port_backend=$app_port_backend" --var "app_image_frontend=$registry_url/$app_frontend" --var "app_port_frontend=$app_port_frontend" --var "app_image_db=$registry_url/$app_db" --var "app_port_db=$app_port_db"
                '''
            }
        }
    }
}